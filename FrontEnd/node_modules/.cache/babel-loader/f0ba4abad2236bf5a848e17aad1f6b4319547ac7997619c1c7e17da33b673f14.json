{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workplace\\\\Node\\\\Assignment 1\\\\FrontEnd\\\\src\\\\components\\\\search\\\\SearchResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport requests from '../../utils/requests';\nimport './SearchResult.css';\nconst base_url = 'https://image.tmdb.org/t/p/original';\nconst SearchResult = _ref => {\n  _s();\n  let {\n    query,\n    mess,\n    searchInput\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const url = `${requests.fetchSearch}`;\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.post(url, query);\n      setMovies(request.data.results);\n      return request;\n    }\n    if (query) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n    console.log(searchInput);\n  }, [url, query]);\n  if (!searchInput) {\n    setMovies([]);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, movies.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters search-resul-container sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      className: `row_poster row_posterLarge`,\n      src: `${base_url}${movie.poster_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, mess)));\n};\n_s(SearchResult, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = SearchResult;\nexport default SearchResult;\nvar _c;\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["React","useState","useEffect","axios","requests","base_url","SearchResult","query","mess","searchInput","movies","setMovies","url","fetchSearch","fetchData","request","post","data","results","console","log","length","map","movie","id","poster_path","name"],"sources":["D:/Workplace/Node/Assignment 1/FrontEnd/src/components/search/SearchResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from '../../utils/axios';\nimport requests from '../../utils/requests';\n\nimport './SearchResult.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n\nconst SearchResult = ({query, mess, searchInput}) => {\n\tconst [movies, setMovies] = useState([]);\n\n\tconst url = `${requests.fetchSearch}`;\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.post(url, query);\n\t\t\tsetMovies(request.data.results);\n\t\t\treturn request;\n\t\t}\n\n\t\tif (query) {\n\t\t\tfetchData();\n\t\t} else {\n\t\t\tsetMovies([]);\n\t\t}\n\t\tconsole.log(searchInput);\n\n\t\t\n\t}, [url, query]);\n\tif(!searchInput){\n\t\tsetMovies([]);\n\t}\n\treturn(\n\t\t<div className='row'>\n\t\t\t<h2>Search Result</h2>\n\t\t\t<div>\n\t\t\t\t{movies.length > 0 ? (\n\t\t\t\t\t<div className='row_posters search-resul-container sc2'>\n\t\t\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\t\tclassName={`row_poster row_posterLarge`}\n\t\t\t\t\t\t\t\t\tsrc={`${base_url}${movie.poster_path}`}\n\t\t\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t<h3>{mess}</h3>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default SearchResult;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,OAAO,oBAAoB;AAE3B,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,MAAMC,YAAY,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAACC,KAAK;IAAEC,IAAI;IAAEC;EAAW,CAAC;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,GAAG,GAAI,GAAER,QAAQ,CAACS,WAAY,EAAC;EAErCX,SAAS,CAAC,MAAM;IACf,eAAeY,SAAS,GAAG;MAC1B,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACJ,GAAG,EAAEL,KAAK,CAAC;MAC5CI,SAAS,CAACI,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IACf;IAEA,IAAIR,KAAK,EAAE;MACVO,SAAS,EAAE;IACZ,CAAC,MAAM;MACNH,SAAS,CAAC,EAAE,CAAC;IACd;IACAQ,OAAO,CAACC,GAAG,CAACX,WAAW,CAAC;EAGzB,CAAC,EAAE,CAACG,GAAG,EAAEL,KAAK,CAAC,CAAC;EAChB,IAAG,CAACE,WAAW,EAAC;IACfE,SAAS,CAAC,EAAE,CAAC;EACd;EACA,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAsB,eACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACED,MAAM,CAACW,MAAM,GAAG,CAAC,gBACjB;IAAK,SAAS,EAAC,wCAAwC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrDX,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAK;IACtB,oBACC;MACC,GAAG,EAAEA,KAAK,CAACC,EAAG;MACd,SAAS,EAAG,4BAA4B;MACxC,GAAG,EAAG,GAAEnB,QAAS,GAAEkB,KAAK,CAACE,WAAY,EAAE;MACvC,GAAG,EAAEF,KAAK,CAACG,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACf;EAEJ,CAAC,CAAC,CACG,gBAEP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKlB,IAAI,CACR,CACI,CACD;AAER,CAAC;AAAC,GA/CIF,YAAY;AAAA,KAAZA,YAAY;AAiDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}