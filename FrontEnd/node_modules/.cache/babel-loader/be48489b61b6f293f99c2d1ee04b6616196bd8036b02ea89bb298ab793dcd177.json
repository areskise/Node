{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workplace\\\\Node\\\\Assignment 1\\\\FrontEnd\\\\src\\\\components\\\\browse\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\nconst base_url = 'https://image.tmdb.org/t/p/original';\nfunction MovieList(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const handleClick = movie => {\n    const url = `${requests.fetchVideoMovies}&id=${movie.id}`;\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl('');\n    } else {\n      setSelectedMovie(movie);\n      axios.post(url).then(response => {\n        setTrailerUrl(response.data.key);\n      }).catch(error => setTrailerUrl(''));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && 'row_posterLarge'}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  })));\n}\n_s(MovieList, \"u2iTSvbk9dvZ8DEaIIpgJs7ovYY=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieDetail","base_url","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetchData","request","get","data","results","handleClick","movie","url","requests","fetchVideoMovies","id","post","then","response","key","catch","error","map","poster_path","backdrop_path","name","padding"],"sources":["D:/Workplace/Node/Assignment 1/FrontEnd/src/components/browse/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState('');\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tsetMovies(request.data.results);\n\t\t\treturn request;\n\t\t}\n\t\tfetchData();\n\t}, [fetchUrl]);\n\n\tconst handleClick = (movie) => {\n\t\tconst url = `${requests.fetchVideoMovies}&id=${movie.id}`;\n\t\tif (selectedMovie && selectedMovie.id === movie.id) {\n\t\t\tsetSelectedMovie(null);\n\t\t\tsetTrailerUrl('');\n\t\t} else {\n\t\t\tsetSelectedMovie(movie);\t\t\t\n\t\t\taxios\n\t\t\t.post(url)\n\t\t\t.then((response) => {\n\t\t\t\t  \tsetTrailerUrl(response.data.key);\n\t\t\t\t})\n\t\t\t.catch((error) => setTrailerUrl(''));\n\t\t}\n\t\n\t};\n\n\treturn (\n\t\t<div className='row'>\n\t\t\t<h2 className=\"movie-list-title\">{title}</h2>\n\t\t\t<div className='row_posters sc2'>\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\tonClick={() => handleClick(movie)}\n\t\t\t\t\t\t\tclassName={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n\t\t\t\t\t\t\tsrc={`${base_url}${\n\t\t\t\t\t\t\t\tisLargeRow ? movie.poster_path : movie.backdrop_path\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div style={{ padding: '40px' }}>\n\t\t\t\t{selectedMovie && <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MovieList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAO,iBAAiB;AAExB,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,SAASC,SAAS,OAAkC;EAAA;EAAA,IAAjC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACf,eAAec,SAAS,GAAG;MAC1B,MAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACV,QAAQ,CAAC;MACzCG,SAAS,CAACM,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IACf;IACAD,SAAS,EAAE;EACZ,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMa,WAAW,GAAIC,KAAK,IAAK;IAC9B,MAAMC,GAAG,GAAI,GAAEC,QAAQ,CAACC,gBAAiB,OAAMH,KAAK,CAACI,EAAG,EAAC;IACzD,IAAIZ,aAAa,IAAIA,aAAa,CAACY,EAAE,KAAKJ,KAAK,CAACI,EAAE,EAAE;MACnDX,gBAAgB,CAAC,IAAI,CAAC;MACtBF,aAAa,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACNE,gBAAgB,CAACO,KAAK,CAAC;MACvBnB,KAAK,CACJwB,IAAI,CAACJ,GAAG,CAAC,CACTK,IAAI,CAAEC,QAAQ,IAAK;QAChBhB,aAAa,CAACgB,QAAQ,CAACV,IAAI,CAACW,GAAG,CAAC;MACnC,CAAC,CAAC,CACFC,KAAK,CAAEC,KAAK,IAAKnB,aAAa,CAAC,EAAE,CAAC,CAAC;IACrC;EAED,CAAC;EAED,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnB;IAAI,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEN,KAAK,CAAM,eAC7C;IAAK,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9BG,MAAM,CAACuB,GAAG,CAAEX,KAAK,IAAK;IACtB,oBACC;MACC,GAAG,EAAEA,KAAK,CAACI,EAAG;MACd,OAAO,EAAE,MAAML,WAAW,CAACC,KAAK,CAAE;MAClC,SAAS,EAAG,cAAab,UAAU,IAAI,iBAAkB,EAAE;MAC3D,GAAG,EAAG,GAAEJ,QAAS,GAChBI,UAAU,GAAGa,KAAK,CAACY,WAAW,GAAGZ,KAAK,CAACa,aACvC,EAAE;MACH,GAAG,EAAEb,KAAK,CAACc,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACf;EAEJ,CAAC,CAAC,CACG,eACN;IAAK,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9BvB,aAAa,iBAAI,oBAAC,WAAW;IAAC,SAAS,EAAEA,aAAc;IAAC,YAAY,EAAEF,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChF,CACD;AAER;AAAC,GAtDQN,SAAS;AAAA,KAATA,SAAS;AAwDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}